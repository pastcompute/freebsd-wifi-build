#!/bin/sh

#
# This is a simple wrapper around the FreeBSD build framework
# to automate building and installing the base system.

# It takes care of setting the target arch flags, setting the
# kernel configuration filename, destination directory, and
# adding whichever local directories will also be built.

# The script is desigend to be run inside a src directory.

# In addition, it (helpfully!) sets the root and obj dirs
# in a directory above the current (src) directory.

# To facilitate building multiple kernel configurations
# for the same architecture, BUILDNAME determines what the
# obj and root directory will be named. Multiple platforms
# using the same architecture (but different kernels)
# can thus just use the same BUILDNAME.

# Finally, this is designed to be used for building FreeBSD-HEAD
# after Warner's "tbemd" build framework changes.

SCRIPT_NAME="`basename $0`"
SCRIPT_DIR="`dirname $0`"
CUR_DIR="`pwd`"

CFGNAME=$1
shift

. ${SCRIPT_DIR}/../cfg/${CFGNAME} || exit 1

# include the config variable generation code
. ${SCRIPT_DIR}/../lib/cfg.sh || exit 1

echo "MAKEOBJDIRPREFIX: ${X_MAKEOBJDIRPREFIX}"

mkdir -p ${X_MAKEOBJDIRPREFIX} || exit 1
mkdir -p ${X_DESTDIR} || exit 1

# XXX double-check this works, especially with the escaping and parameter list
# stuff.
X_LOCAL_TOOL_DIRS=""
if [ "x${LOCAL_TOOL_DIRS}" != "x" ]; then
	X_LOCAL_TOOL_DIRS="LOCAL_TOOL_DIRS=\"${LOCAL_TOOL_DIRS}\""
fi

# Create a make.conf
echo > ${X_DESTDIR}/../make.conf.${BUILDNAME}
#echo "MALLOC_PRODUCTION=" > ${X_DESTDIR}/../make.conf.${BUILDNAME}

# Make a src.conf
echo 'WITHOUT_KERBEROS="YES"' > ${X_DESTDIR}/../src.conf.${BUILDNAME}
echo 'WITHOUT_KERBEROS_SUPPORT="YES"' >> ${X_DESTDIR}/../src.conf.${BUILDNAME}
echo 'WITHOUT_NIS="YES"' >> ${X_DESTDIR}/../src.conf.${BUILDNAME}
echo 'WITHOUT_NDIS="YES"' >> ${X_DESTDIR}/../src.conf.${BUILDNAME}
echo 'WITHOUT_IPX="YES"' >> ${X_DESTDIR}/../src.conf.${BUILDNAME}
echo 'WITHOUT_ATM="YES"' >> ${X_DESTDIR}/../src.conf.${BUILDNAME}
echo 'WITHOUT_ICONV="YES"' >> ${X_DESTDIR}/../src.conf.${BUILDNAME}
echo 'WITHOUT_CLANG_IS_CC="YES"' >> ${X_DESTDIR}/../src.conf.${BUILDNAME}
echo 'WITHOUT_CASPER="YES"' >> ${X_DESTDIR}/../src.conf.${BUILDNAME}
echo 'WITHOUT_CAPSICUM="YES"' >> ${X_DESTDIR}/../src.conf.${BUILDNAME}
echo 'WITHOUT_TESTS="YES"' >> ${X_DESTDIR}/../src.conf.${BUILDNAME}

echo 'WITHOUT_GAMES="YES"' >> ${X_DESTDIR}/../src.conf.${BUILDNAME}
echo 'WITHOUT_DOCS="YES"' >> ${X_DESTDIR}/../src.conf.${BUILDNAME}
echo 'WITHOUT_MAN="YES"' >> ${X_DESTDIR}/../src.conf.${BUILDNAME}
echo 'WITHOUT_INFO="YES"' >> ${X_DESTDIR}/../src.conf.${BUILDNAME}
echo 'WITHOUT_LOCALES="YES"' >> ${X_DESTDIR}/../src.conf.${BUILDNAME}
echo 'WITHOUT_NLS="YES"' >> ${X_DESTDIR}/../src.conf.${BUILDNAME}
echo 'WITHOUT_EXAMPLES="YES"' >> ${X_DESTDIR}/../src.conf.${BUILDNAME}
echo 'WITHOUT_ZFS="YES"' >> ${X_DESTDIR}/../src.conf.${BUILDNAME}
echo 'WITHOUT_RCS="YES"' >> ${X_DESTDIR}/../src.conf.${BUILDNAME}
echo 'WITH_INSTALL_AS_USER="YES"' >> ${X_DESTDIR}/../src.conf.${BUILDNAME}

while [ "x$1" != "x" ]; do
	if [ "$1" = "installworld" ]; then
		mkdir -p ${X_DESTDIR}/usr/local/bin/
		mkdir -p ${X_DESTDIR}/bsdbox/
		mkdir -p ${X_DESTDIR}/usr/local/libdata/athprom/
	fi
	if [ "$1" = "installkernel" ]; then
		mkdir -p ${X_DESTDIR}/boot/kernel.${KERNCONF}/
	fi
	if [ "$1" = "buildenv" ]; then
		echo "*** Overriding BUILD_FLAGS to '' so 'buildenv' works!"
		BUILD_FLAGS=""
	fi
	if [ "$1" = "buildenvvars" ]; then
		echo "*** Overriding BUILD_FLAGS to '' so 'buildenvvars' works!"
		BUILD_FLAGS=""
	fi

	# Only set TARGET_CPUTYPE if it's actually set
	# Always set it for world builds; don't set it for kernel builds
	X_TARGET_CPUTYPE="TARGET_CPUTYPE=${TARGET_CPUTYPE}"
	if [ "$1" = "buildkernel" -o "$1" = "installkernel" ]; then
		if [ "x${KERN_NO_TARGET_CPUTYPE}" = "xyes" ]; then
			X_TARGET_CPUTYPE=""
		fi
	fi

	X_DESTDIR_LINE=""
	if [ "$1" = "installworld" -o "$1" = "installkernel" -o "$1" = "distribution" ]; then
		X_DESTDIR_LINE="DESTDIR=${X_DESTDIR} -DNO_ROOT"
	fi

	env MAKEOBJDIRPREFIX=${X_MAKEOBJDIRPREFIX}		\
	    make -s ${BUILD_FLAGS} DB_FROM_SRC=1		\
	    TARGET=${TARGET}					\
	    TARGET_ARCH=${TARGET_ARCH}				\
	    ${X_TARGET_CPUTYPE}					\
	    KERNCONF=${KERNCONF}				\
	    KODIR=/boot/kernel.${KERNCONF}/			\
	    ${X_DESTDIR_LINE}					\
	    KMODDIR=/boot/kernel.${KERNCONF}/			\
	    __MAKE_CONF=${X_DESTDIR}/../make.conf.${BUILDNAME}	\
	    SRCCONF=${X_DESTDIR}/../src.conf.${BUILDNAME}	\
	    LOCAL_DIRS="${LOCAL_DIRS}"				\
	    ${X_LOCAL_TOOL_DIRS}				\
	    $1							\
	|| exit 1
	if [ "$1" = "installkernel" ]; then
		echo "*** Copying kernel to /tftpboot/kernel.${KERNCONF}"
		cp -f ${X_KERNEL} /tftpboot/kernel.${KERNCONF}
		cp -f ${X_KERNEL}.symbols /tftpboot/kernel.${KERNCONF}.symbols
	fi
	shift
done
